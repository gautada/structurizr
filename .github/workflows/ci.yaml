---
name: "Continuous integration to the container registry"

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main

env:
  IMAGE_NAME: "structurizr"
  IMAGE_VERSION: "2024.12.07"
  UBUNTU_VERSION: "24.04"
  OPENJDK_VERSION: "25-ea+" # See: Linux Aarch65 @ https://jdk.java.net/25/
  OPENJDK_RELEASE: "12"
  IMAGE_TAG_PROD: "latest"
  IMAGE_TAG_DEV: "dev"

jobs:
  build-integrate:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      - name: "Run Super-Linter"
        uses: super-linter/super-linter@v5
        env:
          VALIDATE_DOCKERFILE: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERFILE_FILE_NAME: Containerfile
          # DEFAULT_BRANCH: dev
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: "Set up packages"
        # QEMU for aarch64 (using emulation)
        run: |
          sudo apt-get update
          sudo apt-get install --yes \
            qemu-user-static \
            binfmt-support podman
          sudo update-binfmts --enable qemu-aarch64

      - name: "Repository registry login"
        run: |
          echo "${{ secrets.DOCKERIO_TOKEN }}" | /usr/bin/podman login \
            --username "${{ secrets.DOCKERIO_REGISTRY }}" \
            --password-stdin docker.io

      - name: "Build Container Image for aarch64 using Podman"
        run: |
          /usr/bin/podman build \
           --arch aarch64 \
           --build-arg "CONTAINER_VERSION=${{ env.IMAGE_VERSION }}" \
           --build-arg "UBUNTU_VERSION=${{ env.UBUNTU_VERSION }}" \
           --build-arg "OPENJDK_VERSION=${{ env.OPENJDK_VERSION }}" \
           --build-arg "OPENJDK_RELEASE=${{ env.OPENJDK_RELEASE }}" \
           --file Containerfile \
           --no-cache \
           --tag "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_DEV }}" \
           .
          /usr/bin/podman images

      - name: "Push `dev` image to registry"
        run: |
          S_IMG="${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_DEV }}"
          P_IMG="docker.io/${{ secrets.DOCKERIO_REGISTRY }}"
          IMG="$P_IMG/$S_IMG"
          /usr/bin/podman tag "$S_IMG" "$IMG"
          /usr/bin/podman push "$IMG"

      - name: "Push `latest` & <IMAGE_VERSION> to registry"
        if: github.event_name == 'pull_request' && github.base_ref == 'main'
        run: |
          S_IMG="${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG_DEV }}"
          P_IMG="docker.io/${{ secrets.DOCKERIO_REGISTRY }}"
          IMG="$P_IMG/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }}"
          /usr/bin/podman tag "$S_IMG" "$IMG"
          /usr/bin/podman push "$IMG"
          IMG="$P_IMG/${{ env.IMAGE_NAME }}"
          IMG="$IMG:${{ env.IMAGE_TAG_PROD }}"
          /usr/bin/podman tag "$S_IMG" "$IMG"
          /usr/bin/podman push "$IMG"